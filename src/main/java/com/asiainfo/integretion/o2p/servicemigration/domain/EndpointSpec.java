//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.21 at 03:27:25 com.asiainfo.integretion.o2p.serviceagent.cache.IMemcacheManageServ CST 
//


package com.asiainfo.integretion.o2p.servicemigration.domain;


import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;

import com.asiainfo.integretion.o2p.servicemigration.common.Constant;

@SuppressWarnings("serial")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "endpointSpecType", propOrder = {
    "endpointSpecCode",
    "endpointSpecDetail"
})
public class EndpointSpec extends BasedBean {

    @XmlElement(required = true)
    protected String endpointSpecCode;
    @XmlElements({
    	@XmlElement(name="serviceTechnologyImplement", type=ServiceTechnologyImplement.class),
    	@XmlElement(name="transformer", type=Transformer.class)
    })
    protected Object endpointSpecDetail;

    /**
     * Gets the value of the endpointSpecCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEndpointSpecCode() {
        return endpointSpecCode;
    }

    /**
     * Sets the value of the endpointSpecCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEndpointSpecCode(String value) {
        this.endpointSpecCode = value;
    }

	public Object getEndpointSpecDetail() {
		return endpointSpecDetail;
	}

	public void setEndpointSpecDetail(Object endpointSpecDetail) {
		this.endpointSpecDetail = endpointSpecDetail;
	}

	@SuppressWarnings("rawtypes")
	@Override
	public Class findAttrRealType(String attr) {
		if(Constant.TRANSFORMERv2.equalsIgnoreCase(endpointSpecCode)) {
			return Transformer.class;
		} else if(Constant.JMSCALL.equalsIgnoreCase(endpointSpecCode)
				&& Constant.JMSRECEIVE.equalsIgnoreCase(endpointSpecCode)
				&& Constant.SOCKETACCESS.equalsIgnoreCase(endpointSpecCode)
				&& Constant.CALL.equalsIgnoreCase(endpointSpecCode)) {
			return TechnologyImplement.class;
		}
		return null;
	}

	@Override
	public boolean equals(Object obj){
		return super.equals(obj);
	}

	@Override
	public int hashCode(){
		return super. hashCode();
	}
}
