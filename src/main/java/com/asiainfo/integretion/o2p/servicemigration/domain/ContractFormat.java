//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.21 at 03:27:25 com.asiainfo.integretion.o2p.serviceagent.cache.IMemcacheManageServ CST 
//


package com.asiainfo.integretion.o2p.servicemigration.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "contractFormatDetailType", propOrder = {
    "contractFormatCode",
    "nodeDescCodeOrNodeDesc",
    "formatType",
    "attrValues",
    "description",
    "status"
})
public class ContractFormat extends BasedBean {

    @XmlElement(required = true)
    protected String contractFormatCode;
    @XmlElements({
        @XmlElement(name = "nodeDescCode", type = String.class),
        @XmlElement(name = "nodeDesc", type = NodeDesc.class)
    })
    protected List<Object> nodeDescCodeOrNodeDesc;
    @XmlElement(required = true)
    protected String formatType;
    @XmlElementWrapper(name="attrValues")
    @XmlElement(name="attrValue")
    protected List<AttrValue> attrValues;
    @XmlElement(required = true)
    protected String description;
    @XmlElement(required = true)
    protected String status;
    @XmlTransient
    protected static Map<String, String> valueMap = new HashMap<String, String>();
    static{
    	valueMap.put("1", "XML");
    	valueMap.put("2", "JSON");
    	valueMap.put("3", "URLGET");
    	valueMap.put("4", "FILE");
    	valueMap.put("5", "MAP");
    	valueMap.put("6", "XML/JSON");
    	valueMap.put("", null);
    }

    /**
     * Gets the value of the contractFormatCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getContractFormatCode() {
        return contractFormatCode;
    }

    /**
     * Sets the value of the contractFormatCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setContractFormatCode(String value) {
        this.contractFormatCode = value;
    }

    
    
    public List<AttrValue> getAttrValues() {
		return attrValues;
	}

	public void setAttrValues(List<AttrValue> attrValues) {
		this.attrValues = attrValues;
	}

	public void setNodeDescCodeOrNodeDesc(List<Object> nodeDescCodeOrNodeDesc) {
		this.nodeDescCodeOrNodeDesc = nodeDescCodeOrNodeDesc;
	}

	/**
     * Gets the value of the nodeDescCodeOrNodeDesc property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nodeDescCodeOrNodeDesc property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNodeDescCodeOrNodeDesc().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * {@link NodeDesc }
     * 
     * 
     */
    public List<Object> getNodeDescCodeOrNodeDesc() {
        if (nodeDescCodeOrNodeDesc == null) {
            nodeDescCodeOrNodeDesc = new ArrayList<Object>();
        }
        return this.nodeDescCodeOrNodeDesc;
    }

    /**
     * Gets the value of the formatType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFormatType() {
        return formatType;
    }

    /**
     * Sets the value of the formatType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFormatType(String value) {
        this.formatType = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStatus(String value) {
        this.status = value;
    }
    
    @Override
	void valueTransform(String attr) {
    	if("formatType".equals(attr)) {
    		if(formatType != null) {
    			if("".equals(formatType)) formatType = null;
    			if(valueMap.containsKey(formatType)) {
    				formatType = valueMap.get(formatType);
    			}
    		}
    	}
	}

	@Override
	void valueUnTransform(String attr) {
		if("formatType".equals(attr)) {
    		if(formatType != null) {
    			if("".equals(formatType)) formatType = null;
    			for(String key: valueMap.keySet()) {
    				if(valueMap.get(key) != null && valueMap.get(key).equals(formatType)) {
    					formatType = key;
    				}
    			}
    		}
    	}
	}

	@Override
	public boolean equals(Object obj){
		return super.equals(obj);
	}

	@Override
	public int hashCode(){
		return super. hashCode();
	}
}
